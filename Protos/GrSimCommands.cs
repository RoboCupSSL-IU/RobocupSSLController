// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: grSim_Commands.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from grSim_Commands.proto</summary>
public static partial class GrSimCommandsReflection {

  #region Descriptor
  /// <summary>File descriptor for grSim_Commands.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static GrSimCommandsReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChRnclNpbV9Db21tYW5kcy5wcm90byLqAQoTZ3JTaW1fUm9ib3RfQ29tbWFu",
          "ZBIKCgJpZBgBIAEoDRISCgpraWNrc3BlZWR4GAIgASgCEhIKCmtpY2tzcGVl",
          "ZHoYAyABKAISEgoKdmVsdGFuZ2VudBgEIAEoAhIRCgl2ZWxub3JtYWwYBSAB",
          "KAISEgoKdmVsYW5ndWxhchgGIAEoAhIPCgdzcGlubmVyGAcgASgIEhMKC3do",
          "ZWVsc3NwZWVkGAggASgIEg4KBndoZWVsMRgJIAEoAhIOCgZ3aGVlbDIYCiAB",
          "KAISDgoGd2hlZWwzGAsgASgCEg4KBndoZWVsNBgMIAEoAiJnCg5nclNpbV9D",
          "b21tYW5kcxIRCgl0aW1lc3RhbXAYASABKAESFAoMaXN0ZWFteWVsbG93GAIg",
          "ASgIEiwKDnJvYm90X2NvbW1hbmRzGAMgAygLMhQuZ3JTaW1fUm9ib3RfQ29t",
          "bWFuZGIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::grSim_Robot_Command), global::grSim_Robot_Command.Parser, new[]{ "Id", "Kickspeedx", "Kickspeedz", "Veltangent", "Velnormal", "Velangular", "Spinner", "Wheelsspeed", "Wheel1", "Wheel2", "Wheel3", "Wheel4" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::grSim_Commands), global::grSim_Commands.Parser, new[]{ "Timestamp", "Isteamyellow", "RobotCommands" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class grSim_Robot_Command : pb::IMessage<grSim_Robot_Command> {
  private static readonly pb::MessageParser<grSim_Robot_Command> _parser = new pb::MessageParser<grSim_Robot_Command>(() => new grSim_Robot_Command());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<grSim_Robot_Command> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GrSimCommandsReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public grSim_Robot_Command() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public grSim_Robot_Command(grSim_Robot_Command other) : this() {
    id_ = other.id_;
    kickspeedx_ = other.kickspeedx_;
    kickspeedz_ = other.kickspeedz_;
    veltangent_ = other.veltangent_;
    velnormal_ = other.velnormal_;
    velangular_ = other.velangular_;
    spinner_ = other.spinner_;
    wheelsspeed_ = other.wheelsspeed_;
    wheel1_ = other.wheel1_;
    wheel2_ = other.wheel2_;
    wheel3_ = other.wheel3_;
    wheel4_ = other.wheel4_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public grSim_Robot_Command Clone() {
    return new grSim_Robot_Command(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private uint id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "kickspeedx" field.</summary>
  public const int KickspeedxFieldNumber = 2;
  private float kickspeedx_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Kickspeedx {
    get { return kickspeedx_; }
    set {
      kickspeedx_ = value;
    }
  }

  /// <summary>Field number for the "kickspeedz" field.</summary>
  public const int KickspeedzFieldNumber = 3;
  private float kickspeedz_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Kickspeedz {
    get { return kickspeedz_; }
    set {
      kickspeedz_ = value;
    }
  }

  /// <summary>Field number for the "veltangent" field.</summary>
  public const int VeltangentFieldNumber = 4;
  private float veltangent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Veltangent {
    get { return veltangent_; }
    set {
      veltangent_ = value;
    }
  }

  /// <summary>Field number for the "velnormal" field.</summary>
  public const int VelnormalFieldNumber = 5;
  private float velnormal_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Velnormal {
    get { return velnormal_; }
    set {
      velnormal_ = value;
    }
  }

  /// <summary>Field number for the "velangular" field.</summary>
  public const int VelangularFieldNumber = 6;
  private float velangular_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Velangular {
    get { return velangular_; }
    set {
      velangular_ = value;
    }
  }

  /// <summary>Field number for the "spinner" field.</summary>
  public const int SpinnerFieldNumber = 7;
  private bool spinner_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Spinner {
    get { return spinner_; }
    set {
      spinner_ = value;
    }
  }

  /// <summary>Field number for the "wheelsspeed" field.</summary>
  public const int WheelsspeedFieldNumber = 8;
  private bool wheelsspeed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Wheelsspeed {
    get { return wheelsspeed_; }
    set {
      wheelsspeed_ = value;
    }
  }

  /// <summary>Field number for the "wheel1" field.</summary>
  public const int Wheel1FieldNumber = 9;
  private float wheel1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Wheel1 {
    get { return wheel1_; }
    set {
      wheel1_ = value;
    }
  }

  /// <summary>Field number for the "wheel2" field.</summary>
  public const int Wheel2FieldNumber = 10;
  private float wheel2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Wheel2 {
    get { return wheel2_; }
    set {
      wheel2_ = value;
    }
  }

  /// <summary>Field number for the "wheel3" field.</summary>
  public const int Wheel3FieldNumber = 11;
  private float wheel3_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Wheel3 {
    get { return wheel3_; }
    set {
      wheel3_ = value;
    }
  }

  /// <summary>Field number for the "wheel4" field.</summary>
  public const int Wheel4FieldNumber = 12;
  private float wheel4_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Wheel4 {
    get { return wheel4_; }
    set {
      wheel4_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as grSim_Robot_Command);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(grSim_Robot_Command other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Kickspeedx, other.Kickspeedx)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Kickspeedz, other.Kickspeedz)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Veltangent, other.Veltangent)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Velnormal, other.Velnormal)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Velangular, other.Velangular)) return false;
    if (Spinner != other.Spinner) return false;
    if (Wheelsspeed != other.Wheelsspeed) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Wheel1, other.Wheel1)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Wheel2, other.Wheel2)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Wheel3, other.Wheel3)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Wheel4, other.Wheel4)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Kickspeedx != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Kickspeedx);
    if (Kickspeedz != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Kickspeedz);
    if (Veltangent != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Veltangent);
    if (Velnormal != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Velnormal);
    if (Velangular != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Velangular);
    if (Spinner != false) hash ^= Spinner.GetHashCode();
    if (Wheelsspeed != false) hash ^= Wheelsspeed.GetHashCode();
    if (Wheel1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Wheel1);
    if (Wheel2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Wheel2);
    if (Wheel3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Wheel3);
    if (Wheel4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Wheel4);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    // Edited to honor proto2 semantics
    output.WriteRawTag(8);
    output.WriteUInt32(Id);
    output.WriteRawTag(21);
    output.WriteFloat(Kickspeedx);
    output.WriteRawTag(29);
    output.WriteFloat(Kickspeedz);
    output.WriteRawTag(37);
    output.WriteFloat(Veltangent);
    output.WriteRawTag(45);
    output.WriteFloat(Velnormal);
    output.WriteRawTag(53);
    output.WriteFloat(Velangular);
    output.WriteRawTag(56);
    output.WriteBool(Spinner);
    output.WriteRawTag(64);
    output.WriteBool(Wheelsspeed);
    output.WriteRawTag(77);
    output.WriteFloat(Wheel1);
    output.WriteRawTag(85);
    output.WriteFloat(Wheel2);
    output.WriteRawTag(93);
    output.WriteFloat(Wheel3);
    output.WriteRawTag(101);
    output.WriteFloat(Wheel4);
    if (_unknownFields != null)
    {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    // Edited to honor proto2 semantics
    int size = 0;
    size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
    size += 1 + 4;
    size += 1 + 4;
    size += 1 + 4;
    size += 1 + 4;
    size += 1 + 4;
    size += 1 + 1;
    size += 1 + 1;
    size += 1 + 4;
    size += 1 + 4;
    size += 1 + 4;
    size += 1 + 4;
    if (_unknownFields != null)
    {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(grSim_Robot_Command other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Kickspeedx != 0F) {
      Kickspeedx = other.Kickspeedx;
    }
    if (other.Kickspeedz != 0F) {
      Kickspeedz = other.Kickspeedz;
    }
    if (other.Veltangent != 0F) {
      Veltangent = other.Veltangent;
    }
    if (other.Velnormal != 0F) {
      Velnormal = other.Velnormal;
    }
    if (other.Velangular != 0F) {
      Velangular = other.Velangular;
    }
    if (other.Spinner != false) {
      Spinner = other.Spinner;
    }
    if (other.Wheelsspeed != false) {
      Wheelsspeed = other.Wheelsspeed;
    }
    if (other.Wheel1 != 0F) {
      Wheel1 = other.Wheel1;
    }
    if (other.Wheel2 != 0F) {
      Wheel2 = other.Wheel2;
    }
    if (other.Wheel3 != 0F) {
      Wheel3 = other.Wheel3;
    }
    if (other.Wheel4 != 0F) {
      Wheel4 = other.Wheel4;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadUInt32();
          break;
        }
        case 21: {
          Kickspeedx = input.ReadFloat();
          break;
        }
        case 29: {
          Kickspeedz = input.ReadFloat();
          break;
        }
        case 37: {
          Veltangent = input.ReadFloat();
          break;
        }
        case 45: {
          Velnormal = input.ReadFloat();
          break;
        }
        case 53: {
          Velangular = input.ReadFloat();
          break;
        }
        case 56: {
          Spinner = input.ReadBool();
          break;
        }
        case 64: {
          Wheelsspeed = input.ReadBool();
          break;
        }
        case 77: {
          Wheel1 = input.ReadFloat();
          break;
        }
        case 85: {
          Wheel2 = input.ReadFloat();
          break;
        }
        case 93: {
          Wheel3 = input.ReadFloat();
          break;
        }
        case 101: {
          Wheel4 = input.ReadFloat();
          break;
        }
      }
    }
  }

}

public sealed partial class grSim_Commands : pb::IMessage<grSim_Commands> {
  private static readonly pb::MessageParser<grSim_Commands> _parser = new pb::MessageParser<grSim_Commands>(() => new grSim_Commands());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<grSim_Commands> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GrSimCommandsReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public grSim_Commands() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public grSim_Commands(grSim_Commands other) : this() {
    timestamp_ = other.timestamp_;
    isteamyellow_ = other.isteamyellow_;
    robotCommands_ = other.robotCommands_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public grSim_Commands Clone() {
    return new grSim_Commands(this);
  }

  /// <summary>Field number for the "timestamp" field.</summary>
  public const int TimestampFieldNumber = 1;
  private double timestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Timestamp {
    get { return timestamp_; }
    set {
      timestamp_ = value;
    }
  }

  /// <summary>Field number for the "isteamyellow" field.</summary>
  public const int IsteamyellowFieldNumber = 2;
  private bool isteamyellow_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Isteamyellow {
    get { return isteamyellow_; }
    set {
      isteamyellow_ = value;
    }
  }

  /// <summary>Field number for the "robot_commands" field.</summary>
  public const int RobotCommandsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::grSim_Robot_Command> _repeated_robotCommands_codec
      = pb::FieldCodec.ForMessage(26, global::grSim_Robot_Command.Parser);
  private readonly pbc::RepeatedField<global::grSim_Robot_Command> robotCommands_ = new pbc::RepeatedField<global::grSim_Robot_Command>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::grSim_Robot_Command> RobotCommands {
    get { return robotCommands_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as grSim_Commands);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(grSim_Commands other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Timestamp, other.Timestamp)) return false;
    if (Isteamyellow != other.Isteamyellow) return false;
    if(!robotCommands_.Equals(other.robotCommands_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Timestamp != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Timestamp);
    if (Isteamyellow != false) hash ^= Isteamyellow.GetHashCode();
    hash ^= robotCommands_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Timestamp != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(Timestamp);
    }
    if (Isteamyellow != false) {
      output.WriteRawTag(16);
      output.WriteBool(Isteamyellow);
    }
    robotCommands_.WriteTo(output, _repeated_robotCommands_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Timestamp != 0D) {
      size += 1 + 8;
    }
    if (Isteamyellow != false) {
      size += 1 + 1;
    }
    size += robotCommands_.CalculateSize(_repeated_robotCommands_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(grSim_Commands other) {
    if (other == null) {
      return;
    }
    if (other.Timestamp != 0D) {
      Timestamp = other.Timestamp;
    }
    if (other.Isteamyellow != false) {
      Isteamyellow = other.Isteamyellow;
    }
    robotCommands_.Add(other.robotCommands_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Timestamp = input.ReadDouble();
          break;
        }
        case 16: {
          Isteamyellow = input.ReadBool();
          break;
        }
        case 26: {
          robotCommands_.AddEntriesFrom(input, _repeated_robotCommands_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
